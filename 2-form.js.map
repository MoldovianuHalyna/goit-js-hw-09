{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["// selecting the elements\nconst refs = {\n  form: document.querySelector('.feedback-form'),\n  labels: document.querySelectorAll('.feedback-form label'),\n};\nconst LOCAL_STORAGE_KEY = 'feedback-form-state';\n// styling the form\n\nrefs.labels.forEach(el => el.classList.add('input-label'));\n\ndocument\n  .querySelector('.feedback-form label input')\n  .classList.add('input-field');\n\ndocument\n  .querySelector('.feedback-form label textarea')\n  .classList.add('textarea');\ndocument.querySelector('button').classList.add('submit-btn');\n\n// receiving the data from the local storage\n\nlet formData = {\n  email: '',\n  message: '',\n};\n\nconst fillFieldsOnLoad = function (feedbackForm) {\n  try {\n    const formDataFromLS = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n\n    if (formDataFromLS === null) {\n      return;\n    }\n    formData.email = formDataFromLS.email || '';\n    formData.message = formDataFromLS.message || '';\n\n    const formDataKeys = Object.keys(formDataFromLS);\n\n    formDataKeys.forEach(key => {\n      feedbackForm.elements[key].value = formDataFromLS[key];\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfillFieldsOnLoad(refs.form);\n\n// save to local storage\n\nconst inputEventHandler = function ({ target: formField }) {\n  try {\n    const fieldName = formField.name;\n    const fieldValue = formField.value.trim();\n\n    if (fieldValue) {\n      formData[fieldName] = fieldValue;\n    } else {\n      delete formData[fieldName];\n    }\n\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(formData));\n  } catch (err) {\n    console.log(err);\n  }\n};\n// submit\nconst formSubmit = function (event) {\n  if (!formData.email || !formData.message) {\n    alert('Fill please all fields');\n    return;\n  }\n  event.preventDefault();\n\n  localStorage.removeItem(LOCAL_STORAGE_KEY);\n  event.currentTarget.reset();\n  console.log(formData);\n};\nrefs.form.addEventListener('input', inputEventHandler);\nrefs.form.addEventListener('submit', formSubmit);\n"],"names":["refs","LOCAL_STORAGE_KEY","el","formData","fillFieldsOnLoad","feedbackForm","formDataFromLS","key","err","inputEventHandler","formField","fieldName","fieldValue","formSubmit","event"],"mappings":"wFACA,MAAMA,EAAO,CACX,KAAM,SAAS,cAAc,gBAAgB,EAC7C,OAAQ,SAAS,iBAAiB,sBAAsB,CAC1D,EACMC,EAAoB,sBAG1BD,EAAK,OAAO,QAAQE,GAAMA,EAAG,UAAU,IAAI,aAAa,CAAC,EAEzD,SACG,cAAc,4BAA4B,EAC1C,UAAU,IAAI,aAAa,EAE9B,SACG,cAAc,+BAA+B,EAC7C,UAAU,IAAI,UAAU,EAC3B,SAAS,cAAc,QAAQ,EAAE,UAAU,IAAI,YAAY,EAI3D,IAAIC,EAAW,CACb,MAAO,GACP,QAAS,EACX,EAEA,MAAMC,EAAmB,SAAUC,EAAc,CAC/C,GAAI,CACF,MAAMC,EAAiB,KAAK,MAAM,aAAa,QAAQL,CAAiB,CAAC,EAEzE,GAAIK,IAAmB,KACrB,OAEFH,EAAS,MAAQG,EAAe,OAAS,GACzCH,EAAS,QAAUG,EAAe,SAAW,GAExB,OAAO,KAAKA,CAAc,EAElC,QAAQC,GAAO,CAC1BF,EAAa,SAASE,CAAG,EAAE,MAAQD,EAAeC,CAAG,CAC3D,CAAK,CACF,OAAQC,EAAK,CACZ,QAAQ,IAAIA,CAAG,CACnB,CACA,EAEAJ,EAAiBJ,EAAK,IAAI,EAI1B,MAAMS,EAAoB,SAAU,CAAE,OAAQC,GAAa,CACzD,GAAI,CACF,MAAMC,EAAYD,EAAU,KACtBE,EAAaF,EAAU,MAAM,KAAM,EAErCE,EACFT,EAASQ,CAAS,EAAIC,EAEtB,OAAOT,EAASQ,CAAS,EAG3B,aAAa,QAAQV,EAAmB,KAAK,UAAUE,CAAQ,CAAC,CACjE,OAAQK,EAAK,CACZ,QAAQ,IAAIA,CAAG,CACnB,CACA,EAEMK,EAAa,SAAUC,EAAO,CAClC,GAAI,CAACX,EAAS,OAAS,CAACA,EAAS,QAAS,CACxC,MAAM,wBAAwB,EAC9B,MACJ,CACEW,EAAM,eAAgB,EAEtB,aAAa,WAAWb,CAAiB,EACzCa,EAAM,cAAc,MAAO,EAC3B,QAAQ,IAAIX,CAAQ,CACtB,EACAH,EAAK,KAAK,iBAAiB,QAASS,CAAiB,EACrDT,EAAK,KAAK,iBAAiB,SAAUa,CAAU"}